// Prisma schema for ERP System

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  email       String    @unique
  password    String
  phone       String
  address     String?
  employeeId  String    @unique
  position    String?
  salary      Float?
  department  String
  role        String
  resetToken  String?
  tokenExpiry DateTime?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Customer {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  contact     String
  status      String   // e.g. "Active" or "Inactive"
  description String?
  location    String?
  docUrl      String?  // uploaded document (optional)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model SalesOrder {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  customerName String
  quantity     Int
  product      String
  price        Float
  status       String   @default("Pending") // Pending, Confirmed, Dispatched
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model Product {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  productId   String   @unique
  category    String
  description String?
  b2bPrice    Float?
  b2cPrice    Float?
  stock       Int
  imageUrl    String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model ProductionOrder {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  productId   String 
  productName String
  warehouse   String
  quantity    Int
  status      String   @default("Pending")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Notification {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  message     String
  type        String  
  isRead      Boolean  @default(false)
  userId      String?  
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model MarketplaceOrder {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  platform      String   // Amazon, Flipkart, Others
  customerName  String
  status        String   // Pending, Dispatched, Confirmed
  description   String
  createdAt     DateTime @default(now())
}